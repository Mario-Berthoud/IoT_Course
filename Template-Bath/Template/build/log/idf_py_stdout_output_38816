[1/14] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\mario\Desktop\IoT\Template-Bath\Template\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 C:/Users/mario/Desktop/IoT/Template-Bath/Template/build/bootloader/bootloader.bin"
Bootloader binary size 0x6880 bytes. 0x780 bytes (7%) free.
[2/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/rtc_wake_stub_bath.c.obj
[3/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/wifi.c.obj
[4/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/gauge.c.obj
[5/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[6/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/sntp.c.obj
[7/12] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/mqtt.c.obj
[8/12] Linking C static library esp-idf\main\libmain.a
[9/12] Generating ld/sections.ld
[10/12] Linking CXX executable PIR.elf
[11/12] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/mario/Desktop/IoT/Template-Bath/Template/build/PIR.bin
[12/12] cmd.exe /C "cd /D C:\Users\mario\Desktop\IoT\Template-Bath\Template\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.3_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.3.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/mario/Desktop/IoT/Template-Bath/Template/build/partition_table/partition-table.bin C:/Users/mario/Desktop/IoT/Template-Bath/Template/build/PIR.bin"
PIR.bin binary size 0xea8a0 bytes. Smallest app partition is 0x177000 bytes. 0x8c760 bytes (37%) free.
